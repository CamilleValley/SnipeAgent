<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActionCancelled" xml:space="preserve">
    <value>The action has been cancelled.</value>
  </data>
  <data name="CategoryCreated" xml:space="preserve">
    <value>The category has been created.</value>
  </data>
  <data name="CategoryDeleted" xml:space="preserve">
    <value>The category has been deleted.</value>
  </data>
  <data name="CategoryIDNotFound" xml:space="preserve">
    <value>The category ID couldn't be found.</value>
  </data>
  <data name="CategoryIDNotNull" xml:space="preserve">
    <value>The category ID should be null</value>
  </data>
  <data name="CategoryIDNull" xml:space="preserve">
    <value>The categoryID shouldn't be null</value>
  </data>
  <data name="CategoryMaxNumberReached" xml:space="preserve">
    <value>You can't have more than 10 active categories.</value>
  </data>
  <data name="CategoryNameEmpty" xml:space="preserve">
    <value>Please specify a name for your category</value>
  </data>
  <data name="CategoryUpdated" xml:space="preserve">
    <value>The category has been updated.</value>
  </data>
  <data name="ChangesCancelled" xml:space="preserve">
    <value>The changes have been cancelled</value>
  </data>
  <data name="ForgotPasswordEmailSent" xml:space="preserve">
    <value>Your password has been sent</value>
  </data>
  <data name="ItemEndedOrDelayToShort" xml:space="preserve">
    <value>This item has already ended or the delay is too short.</value>
  </data>
  <data name="ItemIDNotANumber" xml:space="preserve">
    <value>Please provide a valid item ID.</value>
  </data>
  <data name="SnipeAlreadyExists" xml:space="preserve">
    <value>You already have a snipe for this item</value>
  </data>
  <data name="SnipeBidInvalid" xml:space="preserve">
    <value>You bid is invalid. It should be a number superior to 0.</value>
  </data>
  <data name="SnipeBidNotANumber" xml:space="preserve">
    <value>Your bid must be a number.</value>
  </data>
  <data name="SnipeBidPlaced" xml:space="preserve">
    <value>The bid was successfully placed.</value>
  </data>
  <data name="SnipeBidUnderCurrentPrice" xml:space="preserve">
    <value>Your bid is too low.</value>
  </data>
  <data name="SnipeCreated" xml:space="preserve">
    <value>The snipe has been created.</value>
  </data>
  <data name="SnipeDelayInvalid" xml:space="preserve">
    <value>The snipe delay is in seconds. It should be 3, 7 or 10.</value>
  </data>
  <data name="SnipeDeleted" xml:space="preserve">
    <value>The snipe has been cancelled.</value>
  </data>
  <data name="SnipeIDNotNull" xml:space="preserve">
    <value>The snipe ID should be null</value>
  </data>
  <data name="SnipeIDNull" xml:space="preserve">
    <value>The snipe ID shouldn't be null</value>
  </data>
  <data name="SnipeItemEndDateEmpty" xml:space="preserve">
    <value>The item end date is empty.</value>
  </data>
  <data name="SnipeNameEmpty" xml:space="preserve">
    <value>Please provide a name for your snipe</value>
  </data>
  <data name="SnipeUpdated" xml:space="preserve">
    <value>The snipe has been updated.</value>
  </data>
  <data name="SnipeWrongGenIncreaseBid" xml:space="preserve">
    <value>Please specify the increase between each retry. It can be '0'.</value>
  </data>
  <data name="SnipeWrongGenRemainingNb" xml:space="preserve">
    <value>Please specify how many you want to retry with similar items, in case of failure.</value>
  </data>
  <data name="SnipeYoungerSnipeSameCategoryExists" xml:space="preserve">
    <value>Another snipe, that ends earlier,  exists for a same category.</value>
  </data>
  <data name="SubscriptionAdded" xml:space="preserve">
    <value>Your subscription was successfully created.</value>
  </data>
  <data name="UserAlreadyExists" xml:space="preserve">
    <value>Sorry, this name is already used by another member.</value>
  </data>
  <data name="UserEBayAccountNotAssociated" xml:space="preserve">
    <value>You need to associate an eBay account.</value>
  </data>
  <data name="UserEmailEmpty" xml:space="preserve">
    <value>Please provide an email address.</value>
  </data>
  <data name="UserEmailOrUserNameNotFound" xml:space="preserve">
    <value>We couldnl't find your name or email address.</value>
  </data>
  <data name="UserIDNotNull" xml:space="preserve">
    <value>The user id isn't empty</value>
  </data>
  <data name="UserIDNull" xml:space="preserve">
    <value>The user id shouldn't be empty</value>
  </data>
  <data name="UserIDsMismatching" xml:space="preserve">
    <value>The user id trying to update the action isn't the one which is logged in!</value>
  </data>
  <data name="UserIPAddressEmpty" xml:space="preserve">
    <value>The IP address is empty.</value>
  </data>
  <data name="UserIPAddressWrongFormat" xml:space="preserve">
    <value>The IP address has a wrong format.</value>
  </data>
  <data name="UserNameEmpty" xml:space="preserve">
    <value>Please provide a user name.</value>
  </data>
  <data name="UserNameTooSmall" xml:space="preserve">
    <value>Your user name should contain at least 5 caracters</value>
  </data>
  <data name="UserNotLoggedIn" xml:space="preserve">
    <value>The user should be logged in to take this action.</value>
  </data>
  <data name="UserPasswordAndLoginNotMatching" xml:space="preserve">
    <value>The login and password don't match!</value>
  </data>
  <data name="UserPasswordEmpty" xml:space="preserve">
    <value>Please provide a password.</value>
  </data>
  <data name="UserPasswordTooSmall" xml:space="preserve">
    <value>Your password should contain at least 5 caracters</value>
  </data>
  <data name="UserTokenAlreadyAssociated" xml:space="preserve">
    <value>This eBay user has already been assigned.</value>
  </data>
  <data name="UserUpdated" xml:space="preserve">
    <value>You account has been saved.</value>
  </data>
</root>